//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Brumo\Documents\repos\Compiler-Design\Labs\Lab7\Compiler\bin\debug\netcoreapp3.1\ssupl.txt by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IssuplListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ssuplBaseListener : IssuplListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStart([NotNull] ssuplParser.StartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStart([NotNull] ssuplParser.StartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] ssuplParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] ssuplParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.braceblock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBraceblock([NotNull] ssuplParser.BraceblockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.braceblock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBraceblock([NotNull] ssuplParser.BraceblockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.stmts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmts([NotNull] ssuplParser.StmtsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.stmts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmts([NotNull] ssuplParser.StmtsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] ssuplParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] ssuplParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>condNoElse</c>
	/// labeled alternative in <see cref="ssuplParser.cond"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondNoElse([NotNull] ssuplParser.CondNoElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>condNoElse</c>
	/// labeled alternative in <see cref="ssuplParser.cond"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondNoElse([NotNull] ssuplParser.CondNoElseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>condElse</c>
	/// labeled alternative in <see cref="ssuplParser.cond"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondElse([NotNull] ssuplParser.CondElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>condElse</c>
	/// labeled alternative in <see cref="ssuplParser.cond"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondElse([NotNull] ssuplParser.CondElseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStmt([NotNull] ssuplParser.ReturnStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStmt([NotNull] ssuplParser.ReturnStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoop([NotNull] ssuplParser.LoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoop([NotNull] ssuplParser.LoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] ssuplParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] ssuplParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>orexp1</c>
	/// labeled alternative in <see cref="ssuplParser.orexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrexp1([NotNull] ssuplParser.Orexp1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>orexp1</c>
	/// labeled alternative in <see cref="ssuplParser.orexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrexp1([NotNull] ssuplParser.Orexp1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>orexp2</c>
	/// labeled alternative in <see cref="ssuplParser.orexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrexp2([NotNull] ssuplParser.Orexp2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>orexp2</c>
	/// labeled alternative in <see cref="ssuplParser.orexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrexp2([NotNull] ssuplParser.Orexp2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>andexp1</c>
	/// labeled alternative in <see cref="ssuplParser.andexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndexp1([NotNull] ssuplParser.Andexp1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>andexp1</c>
	/// labeled alternative in <see cref="ssuplParser.andexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndexp1([NotNull] ssuplParser.Andexp1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>andexp2</c>
	/// labeled alternative in <see cref="ssuplParser.andexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndexp2([NotNull] ssuplParser.Andexp2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>andexp2</c>
	/// labeled alternative in <see cref="ssuplParser.andexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndexp2([NotNull] ssuplParser.Andexp2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>notexp1</c>
	/// labeled alternative in <see cref="ssuplParser.notexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotexp1([NotNull] ssuplParser.Notexp1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notexp1</c>
	/// labeled alternative in <see cref="ssuplParser.notexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotexp1([NotNull] ssuplParser.Notexp1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>notexp2</c>
	/// labeled alternative in <see cref="ssuplParser.notexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotexp2([NotNull] ssuplParser.Notexp2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notexp2</c>
	/// labeled alternative in <see cref="ssuplParser.notexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotexp2([NotNull] ssuplParser.Notexp2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rel1</c>
	/// labeled alternative in <see cref="ssuplParser.rel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRel1([NotNull] ssuplParser.Rel1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rel1</c>
	/// labeled alternative in <see cref="ssuplParser.rel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRel1([NotNull] ssuplParser.Rel1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rel2</c>
	/// labeled alternative in <see cref="ssuplParser.rel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRel2([NotNull] ssuplParser.Rel2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rel2</c>
	/// labeled alternative in <see cref="ssuplParser.rel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRel2([NotNull] ssuplParser.Rel2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>sum1</c>
	/// labeled alternative in <see cref="ssuplParser.sum"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSum1([NotNull] ssuplParser.Sum1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>sum1</c>
	/// labeled alternative in <see cref="ssuplParser.sum"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSum1([NotNull] ssuplParser.Sum1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>sum2</c>
	/// labeled alternative in <see cref="ssuplParser.sum"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSum2([NotNull] ssuplParser.Sum2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>sum2</c>
	/// labeled alternative in <see cref="ssuplParser.sum"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSum2([NotNull] ssuplParser.Sum2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>sum3</c>
	/// labeled alternative in <see cref="ssuplParser.sum"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSum3([NotNull] ssuplParser.Sum3Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>sum3</c>
	/// labeled alternative in <see cref="ssuplParser.sum"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSum3([NotNull] ssuplParser.Sum3Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>term2</c>
	/// labeled alternative in <see cref="ssuplParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm2([NotNull] ssuplParser.Term2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>term2</c>
	/// labeled alternative in <see cref="ssuplParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm2([NotNull] ssuplParser.Term2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>term1</c>
	/// labeled alternative in <see cref="ssuplParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm1([NotNull] ssuplParser.Term1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>term1</c>
	/// labeled alternative in <see cref="ssuplParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm1([NotNull] ssuplParser.Term1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>neg1</c>
	/// labeled alternative in <see cref="ssuplParser.neg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNeg1([NotNull] ssuplParser.Neg1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>neg1</c>
	/// labeled alternative in <see cref="ssuplParser.neg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNeg1([NotNull] ssuplParser.Neg1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>neg2</c>
	/// labeled alternative in <see cref="ssuplParser.neg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNeg2([NotNull] ssuplParser.Neg2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>neg2</c>
	/// labeled alternative in <see cref="ssuplParser.neg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNeg2([NotNull] ssuplParser.Neg2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>factor1</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor1([NotNull] ssuplParser.Factor1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>factor1</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor1([NotNull] ssuplParser.Factor1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>factor2</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor2([NotNull] ssuplParser.Factor2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>factor2</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor2([NotNull] ssuplParser.Factor2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>factor3</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor3([NotNull] ssuplParser.Factor3Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>factor3</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor3([NotNull] ssuplParser.Factor3Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>factor4</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor4([NotNull] ssuplParser.Factor4Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>factor4</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor4([NotNull] ssuplParser.Factor4Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>factor5</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor5([NotNull] ssuplParser.Factor5Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>factor5</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor5([NotNull] ssuplParser.Factor5Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>cast1</c>
	/// labeled alternative in <see cref="ssuplParser.cast"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCast1([NotNull] ssuplParser.Cast1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>cast1</c>
	/// labeled alternative in <see cref="ssuplParser.cast"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCast1([NotNull] ssuplParser.Cast1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.vardecllist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVardecllist([NotNull] ssuplParser.VardecllistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.vardecllist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVardecllist([NotNull] ssuplParser.VardecllistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.vardecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVardecl([NotNull] ssuplParser.VardeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.vardecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVardecl([NotNull] ssuplParser.VardeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign([NotNull] ssuplParser.AssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign([NotNull] ssuplParser.AssignContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
