//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Brumo\Documents\repos\Compiler-Design\Labs\Lab8\Compiler\bin\debug\netcoreapp3.1\ssupl.txt by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ssuplParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IssuplListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] ssuplParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] ssuplParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] ssuplParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] ssuplParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.braceblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBraceblock([NotNull] ssuplParser.BraceblockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.braceblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBraceblock([NotNull] ssuplParser.BraceblockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.stmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmts([NotNull] ssuplParser.StmtsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.stmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmts([NotNull] ssuplParser.StmtsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] ssuplParser.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] ssuplParser.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>condNoElse</c>
	/// labeled alternative in <see cref="ssuplParser.cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondNoElse([NotNull] ssuplParser.CondNoElseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>condNoElse</c>
	/// labeled alternative in <see cref="ssuplParser.cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondNoElse([NotNull] ssuplParser.CondNoElseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>condElse</c>
	/// labeled alternative in <see cref="ssuplParser.cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondElse([NotNull] ssuplParser.CondElseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>condElse</c>
	/// labeled alternative in <see cref="ssuplParser.cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondElse([NotNull] ssuplParser.CondElseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] ssuplParser.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] ssuplParser.ReturnStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoop([NotNull] ssuplParser.LoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoop([NotNull] ssuplParser.LoopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] ssuplParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] ssuplParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>orexp1</c>
	/// labeled alternative in <see cref="ssuplParser.orexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrexp1([NotNull] ssuplParser.Orexp1Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>orexp1</c>
	/// labeled alternative in <see cref="ssuplParser.orexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrexp1([NotNull] ssuplParser.Orexp1Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>orexp2</c>
	/// labeled alternative in <see cref="ssuplParser.orexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrexp2([NotNull] ssuplParser.Orexp2Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>orexp2</c>
	/// labeled alternative in <see cref="ssuplParser.orexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrexp2([NotNull] ssuplParser.Orexp2Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>andexp1</c>
	/// labeled alternative in <see cref="ssuplParser.andexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndexp1([NotNull] ssuplParser.Andexp1Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>andexp1</c>
	/// labeled alternative in <see cref="ssuplParser.andexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndexp1([NotNull] ssuplParser.Andexp1Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>andexp2</c>
	/// labeled alternative in <see cref="ssuplParser.andexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndexp2([NotNull] ssuplParser.Andexp2Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>andexp2</c>
	/// labeled alternative in <see cref="ssuplParser.andexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndexp2([NotNull] ssuplParser.Andexp2Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>notexp1</c>
	/// labeled alternative in <see cref="ssuplParser.notexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotexp1([NotNull] ssuplParser.Notexp1Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>notexp1</c>
	/// labeled alternative in <see cref="ssuplParser.notexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotexp1([NotNull] ssuplParser.Notexp1Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>notexp2</c>
	/// labeled alternative in <see cref="ssuplParser.notexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotexp2([NotNull] ssuplParser.Notexp2Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>notexp2</c>
	/// labeled alternative in <see cref="ssuplParser.notexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotexp2([NotNull] ssuplParser.Notexp2Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rel1</c>
	/// labeled alternative in <see cref="ssuplParser.rel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRel1([NotNull] ssuplParser.Rel1Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rel1</c>
	/// labeled alternative in <see cref="ssuplParser.rel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRel1([NotNull] ssuplParser.Rel1Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rel2</c>
	/// labeled alternative in <see cref="ssuplParser.rel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRel2([NotNull] ssuplParser.Rel2Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rel2</c>
	/// labeled alternative in <see cref="ssuplParser.rel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRel2([NotNull] ssuplParser.Rel2Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>sum1</c>
	/// labeled alternative in <see cref="ssuplParser.sum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSum1([NotNull] ssuplParser.Sum1Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>sum1</c>
	/// labeled alternative in <see cref="ssuplParser.sum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSum1([NotNull] ssuplParser.Sum1Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>sum2</c>
	/// labeled alternative in <see cref="ssuplParser.sum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSum2([NotNull] ssuplParser.Sum2Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>sum2</c>
	/// labeled alternative in <see cref="ssuplParser.sum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSum2([NotNull] ssuplParser.Sum2Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>sum3</c>
	/// labeled alternative in <see cref="ssuplParser.sum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSum3([NotNull] ssuplParser.Sum3Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>sum3</c>
	/// labeled alternative in <see cref="ssuplParser.sum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSum3([NotNull] ssuplParser.Sum3Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>term2</c>
	/// labeled alternative in <see cref="ssuplParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm2([NotNull] ssuplParser.Term2Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>term2</c>
	/// labeled alternative in <see cref="ssuplParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm2([NotNull] ssuplParser.Term2Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>term1</c>
	/// labeled alternative in <see cref="ssuplParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm1([NotNull] ssuplParser.Term1Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>term1</c>
	/// labeled alternative in <see cref="ssuplParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm1([NotNull] ssuplParser.Term1Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>neg1</c>
	/// labeled alternative in <see cref="ssuplParser.neg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNeg1([NotNull] ssuplParser.Neg1Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>neg1</c>
	/// labeled alternative in <see cref="ssuplParser.neg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNeg1([NotNull] ssuplParser.Neg1Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>neg2</c>
	/// labeled alternative in <see cref="ssuplParser.neg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNeg2([NotNull] ssuplParser.Neg2Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>neg2</c>
	/// labeled alternative in <see cref="ssuplParser.neg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNeg2([NotNull] ssuplParser.Neg2Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>factor1</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor1([NotNull] ssuplParser.Factor1Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>factor1</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor1([NotNull] ssuplParser.Factor1Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>factor2</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor2([NotNull] ssuplParser.Factor2Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>factor2</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor2([NotNull] ssuplParser.Factor2Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>factor3</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor3([NotNull] ssuplParser.Factor3Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>factor3</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor3([NotNull] ssuplParser.Factor3Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>factor4</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor4([NotNull] ssuplParser.Factor4Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>factor4</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor4([NotNull] ssuplParser.Factor4Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>factor5</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor5([NotNull] ssuplParser.Factor5Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>factor5</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor5([NotNull] ssuplParser.Factor5Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>factor6</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor6([NotNull] ssuplParser.Factor6Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>factor6</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor6([NotNull] ssuplParser.Factor6Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>factor7</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor7([NotNull] ssuplParser.Factor7Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>factor7</c>
	/// labeled alternative in <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor7([NotNull] ssuplParser.Factor7Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>cast1</c>
	/// labeled alternative in <see cref="ssuplParser.cast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCast1([NotNull] ssuplParser.Cast1Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>cast1</c>
	/// labeled alternative in <see cref="ssuplParser.cast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCast1([NotNull] ssuplParser.Cast1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.vardecllist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVardecllist([NotNull] ssuplParser.VardecllistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.vardecllist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVardecllist([NotNull] ssuplParser.VardecllistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.vardecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVardecl([NotNull] ssuplParser.VardeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.vardecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVardecl([NotNull] ssuplParser.VardeclContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assign1</c>
	/// labeled alternative in <see cref="ssuplParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign1([NotNull] ssuplParser.Assign1Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assign1</c>
	/// labeled alternative in <see cref="ssuplParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign1([NotNull] ssuplParser.Assign1Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assign2</c>
	/// labeled alternative in <see cref="ssuplParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign2([NotNull] ssuplParser.Assign2Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assign2</c>
	/// labeled alternative in <see cref="ssuplParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign2([NotNull] ssuplParser.Assign2Context context);
}
