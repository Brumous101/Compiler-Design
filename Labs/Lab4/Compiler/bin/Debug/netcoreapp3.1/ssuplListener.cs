//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Brumo\Documents\repos\Compiler-Design\Labs\Lab4\Compiler\bin\debug\netcoreapp3.1\ssupl.txt by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ssuplParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IssuplListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] ssuplParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] ssuplParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] ssuplParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] ssuplParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.braceblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBraceblock([NotNull] ssuplParser.BraceblockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.braceblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBraceblock([NotNull] ssuplParser.BraceblockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.stmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmts([NotNull] ssuplParser.StmtsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.stmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmts([NotNull] ssuplParser.StmtsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] ssuplParser.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] ssuplParser.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>condNoElse</c>
	/// labeled alternative in <see cref="ssuplParser.cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondNoElse([NotNull] ssuplParser.CondNoElseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>condNoElse</c>
	/// labeled alternative in <see cref="ssuplParser.cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondNoElse([NotNull] ssuplParser.CondNoElseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>condElse</c>
	/// labeled alternative in <see cref="ssuplParser.cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondElse([NotNull] ssuplParser.CondElseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>condElse</c>
	/// labeled alternative in <see cref="ssuplParser.cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondElse([NotNull] ssuplParser.CondElseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] ssuplParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] ssuplParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] ssuplParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] ssuplParser.FactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] ssuplParser.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] ssuplParser.ReturnStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ssuplParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoop([NotNull] ssuplParser.LoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ssuplParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoop([NotNull] ssuplParser.LoopContext context);
}
